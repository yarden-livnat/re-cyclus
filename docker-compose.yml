version: "3"
services:
  redis:
    container_name: redis
    image: "redis:alpine"
    command: redis-server --appendonly yes
    volumes:
      - ./repositories/redis:/data
    networks:
      - cyclus

  batch:
    container_name: batch
    build:
      context: batch
      dockerfile: ./Dockerfile
    environment:
      - FLASK_ENV=development
    ports:
      - "5010:5010"
    volumes:
      - ./batch:/code
    depends_on:
      - redis
    networks:
      - cyclus

  worker:
    build:
      context: worker
      dockerfile: ./Dockerfile
    volumes:
      - ./worker:/code
      - ./repositories/jobs:/jobs
    restart: on-failure
    depends_on:
      - redis
    networks:
      - cyclus

  datastore:
    container_name: datastore
    build:
      context: datastore
      dockerfile: ./Dockerfile
    environment:
      - FLASK_ENV=development
    ports:
      - "5020:5020"
    volumes:
      - ./datastore:/code
      - ./repositories/datastore/files:/files
    depends_on:
      - datastore-db
    networks:
      - cyclus

  datastore-db:
    container_name: datastore-db
    image: "mongo:latest"
#    env_file:
#      - ./env/datastore_db.env
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./repositories/datastore/db:/data/db
    networks:
      - cyclus


  gateway:
    container_name: gateway
    build:
      context: gateway
      dockerfile: ./docker/Dockerfile
    environment:
      - FLASK_ENV=development
      - FOO=bar
    env_file:
      - env/gateway.env
    ports:
      - "5000:5000"
    volumes:
      - ./gateway:/code
      - ./repositories/gateway:/data
    networks:
      - cyclus
    depends_on:
      - redis
      - batch
      - datastore

volumes:
  data:

networks:
  cyclus:
